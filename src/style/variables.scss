// 自定义全局样式变量
$theme-color-1: var(--theme-color-1);
$theme-color-2: var(--theme-color-2);

/* 
  注意：由于 css 变量具有某些限制，暂时无法在如下的属性中使用：
    - rgba()
*/

// font
$font-color: #ddd;
$font-inactive-color: gray;
$font-active-color: #fff;
$font-deep-color: rgb(197, 197, 197);

// item
$item-color-1: rgba(#000, .3);
$item-color-2: rgba(#000, .25);
$item-hover-color: rgba(#000, .5);
$item-active-color: rgba(#000, .5);

$label-color: #000;
$type-color: red;
$popper-bg-color: rgba(37, 37, 37, 0.85);

// 覆盖 element-plus 样式变量
@forward 'element-plus/theme-chalk/src/common/var.scss' with (
  // bug: 无法解析 var()
  $colors: (
    'primary': (
      'base': $font-active-color,
    ),
  ),
  $text-color: (
    'primary': $font-color,
    'regular': $font-color,
    'secondary': $font-deep-color,
  ),
  $input: (
    'bg-color': $item-color-1,
    'border': none,
    'placeholder-color': $font-inactive-color,
    'text-color': $font-color,
  ),
  $menu: (
    'active-color': $font-active-color,
    'text-color': $font-color,
    'hover-bg-color': $item-active-color,
  ),
  $button: (
    'border-color': transparent,
    'bg-color': rgba(#000, .3),
    'text-color': $font-color,
    'disabled-text-color': $font-inactive-color,
    'disabled-bg-color': rgba(#000, .1),
    'disabled-border-color': transparent,
    'hover-text-color': '#{$font-active-color} !important',
    'hover-bg-color': rgba(#000, .25),
    'hover-border-color': transparent,
    'active-text-color': $font-active-color,
    'active-border-color': rgba(#000, .1),
    'active-bg-color': rgba(#000, .2),
  ),
  $pagination: (
    'bg-color': transparent,
    'button-disabled-bg-color': transparent,
    'text-color': $font-color,
    'hover-color': $theme-color-1,
    'button-color': $font-color,
    'button-disabled-color': $font-color,
  ),
  $radio: (
    'input-bg-color': transparent,
  ),
);

@mixin hover-font {
  color: $font-color;
  &:hover {
    color: $font-active-color;
  }
}

@mixin user-name-color {
  cursor: pointer;
  color: rgb(125, 125, 255);
  &:hover {
    color: rgb(177, 177, 255);
  }
}

@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin bounce-in {
  animation: bounce-in .25s ease-in backwards;
}
@mixin bounce-out {
  animation: bounce-out .25s ease-in forwards;
}
@mixin bounce-hover {
  animation: bounce-hover .25s ease-in-out forwards;
}

@keyframes bounce-out {
  30% {
    transform: scale(1.1);
  }
  to {
    transform: scale(0);
  }
}
@keyframes bounce-in {
  from {
    transform: scale(0);
  }
  70% {
    transform: scale(1.1);
  }
  to {
    transform: scale(1);
  }
}
@keyframes bounce-hover {
  70% {
    transform: scale(1.5);
  }
  to {
    transform: scale(1.2);
  }
}

@mixin glass-background {
  position: relative;
  overflow: hidden;
  z-index: 1;
  &::before {
    content: '';
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    background-color: rgba(#000, 0.1);
    border-radius: 10px;
  }
  &::after {
    content: '';
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    z-index: -1;
    background-image: url('/rainBg.png');
    background-position: center top;
    background-size: cover;
    background-attachment: fixed;
    -webkit-filter: blur(10px);
    -moz-filter: blur(10px);
    -ms-filter: blur(10px);
    -o-filter: blur(10px);
    filter: blur(10px);
    margin: -20px;
  }
}
